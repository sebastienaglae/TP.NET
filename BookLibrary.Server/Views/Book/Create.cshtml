@model BookLibrary.Server.ViewModels.CreateBookViewModel
@{
    ViewData["Title"] = "Add a book";
}
<div class="card">
    <div class="card-header">
        <i class="icon-plus"></i> Add a book
    </div>
    <div class="card-body">
        <h2 class="text-center mt-3">Create a new book</h2>
        <form method="post" asp-action="Create">
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Genres">
                    Genres
                </label>
                <div class="dropdown">
                    <input id="Genres" name="Genres" type="text" class="form-control" autocomplete="off" data-toggle="dropdown"/>
                    <div id="genreList" class="dropdown-menu"></div>
                </div>
                <div id="selectedGenres" class="d-flex flex-wrap"></div>
                <small class="form-text text-muted">You can add multiple genres, when autocomplete shows the genre you want, click on it to add it to the list.</small>
                <span asp-validation-for="GenreIds" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="Authors">Authors</label>
                <div class="dropdown">
                    <input id="Authors" name="Authors" type="text" class="form-control" autocomplete="off" data-toggle="dropdown"/>
                    <div id="authorList" class="dropdown-menu"></div>
                </div>
                <div id="selectedAuthors" class="d-flex flex-wrap"></div>
                <small class="form-text text-muted">You can add multiple authors, when autocomplete shows the author you want, click on it to add it to the list.</small>
                <span asp-validation-for="AuthorIds" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" for="Description">Description</label>
                <textarea asp-for="Description" id="Description" name="Description" class="form-control" rows="5"></textarea>
                <small class="form-text text-muted">You can resize the textarea by dragging the bottom right corner.</small>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Pages" for="Pages">Pages</label>
                @foreach (var p in Model.Pages)
                {
                    <div class="page-content">
                        <textarea name="Pages" class="form-control mb-3" rows="10">@p</textarea>
                        <button type="button" class="btn btn-danger page-delete-btn" onclick="deletePage(this)">Delete</button>
                    </div>
                }
                <!-- add button to add pages -->
                <div>
                    <button type="button" class="btn btn-primary mt-1" id="addPage">Add page</button>
                </div>
                <span asp-validation-for="Pages" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" for="Price">Price</label>
                <input asp-for="Price" id="Price" name="Price" type="number" step="0.01" min="0" class="form-control"/>
            </div>
            <input type="submit" value="Add" class="btn btn-primary"/>
            <input value="Import from ISBN" class="btn btn-secondary" id="importFromIsbn" type="button"/>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const authors = @Json.Serialize(Model.Authors);
        const genres = @Json.Serialize(Model.Genres);
    </script>
    <script src="~/js/book.js"></script>
}